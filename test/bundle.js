(()=>{"use strict";const t=new class{constructor(){this.useA=!1;let t=function(t){let e=parseInt(t.substr(0,8),16),n=parseInt(t.substr(8,8),16),o=parseInt(t.substr(16,8),16),a=parseInt(t.substr(24,8),16);return function(){e|=0,n|=0,o|=0,a|=0;let t=(e+n|0)+a|0;return a=a+1|0,e=n^n>>>9,n=o+(o<<3)|0,o=o<<21|o>>>11,o=o+t|0,(t>>>0)/4294967296}};this.prngA=new t(tokenData.hash.substr(2,32)),this.prngB=new t(tokenData.hash.substr(34,32));for(let t=0;t<1e6;t+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}};function e(){return t.random_dec()}function n(t,n){return t+e()*(n-t)}function o(t){return t[Math.floor(e()*t.length)]}function a(t){let n=0;const o=e(),a=t.reduce(((t,[e,n])=>t+n),0);return(t.map((([t,e])=>(n+=1*e/a??1,[t,e,n]))).find((([t,e,n])=>o<n))??t[t.length-1])[0]}function s(t){for(let n=t.length-1;n>0;n--){const o=Math.floor(e()*(n+1));[t[n],t[o]]=[t[o],t[n]]}return t}let r,l=!1;const i=[{name:"Canyons",getLayers:(t,e,n,o)=>{const a={td:20,tm:.02,dd:500,dm:.01},s=[],r=e([.15,.85]),l=o(.3,.7),i=l>.5?o(.3,.45):o(.55,.7),f=o(.5,.6),u=f+o(.15,.3);let m,h,d=t()<.5;const c=e([5,6,7,8]);for(let e=0;e<c;e++){null==m?(h=f-o(.4,.5),m={top:h,bottom:f}):(m.top=h+(e/(c-1))**1.75*(u-f),m.bottom=f+(e/(c-1))**1.75*(u-f));const n=l+(e/(c-1))**1.75*(i-l);d?s.push({tG:[{x:0,y:m.top},t()<r?{x:o(.33,.67)*n,y:m.top+o(0,.25)*(m.bottom-m.top)}:void 0,{x:n,y:m.bottom}].filter(Boolean),...a,lSD:-1}):s.push({tG:[{x:n,y:m.bottom},t()<r?{x:n+o(.33,.66)*(1-n),y:m.top+o(0,.25)*(m.bottom-m.top)}:void 0,{x:1,y:m.top}].filter(Boolean),...a,lSD:1}),d=!d}return s},yOffsets:[[{offset:.1,lumProb:.2},.1],[{offset:.15,lumProb:.3},.2],[{offset:.2,lumProb:.5},.4],[{offset:.3,lumProb:.7},.2],[{offset:.4,lumProb:1},.1]]},{name:"Cliffs",getLayers:(t,e,n,o)=>{const a={td:10,tm:.04,dd:200,dm:.008},s=n(.4,.05),r=s-(.05+Math.abs(n(0,.075))),l=s+Math.abs(n(0,.075)),i=l-(.05+Math.abs(n(0,.075))),f=o(.1,.9),u=Math.max(f-(.2+Math.abs(n(0,.15))),0),m=Math.min(f+(.2+Math.abs(n(0,.15))),1),h=o(.1,.9),d=Math.max(h-(.1+Math.abs(n(0,.15))),0),c=Math.min(h+(.1+Math.abs(n(0,.15))),1),g=[];g.push({x:u,y:s}),g.push({x:f,y:r}),g.push({x:m,y:s}),m<1&&g.push({x:1,y:s}),g.unshift({x:-.5,y:g[0].y});const y=[];d>0&&y.push({x:0,y:l}),y.push({x:d,y:l}),y.push({x:h,y:i}),y.push({x:c,y:l}),c<1&&y.push({x:1,y:l});const b=[{tG:g,...a,layerHeight:.5},{tG:y,...a,dm:2*a.dm,layerHeight:.5}],p=t(),x=.45,M=.05;let D;if(p<.667&&(D=.1+.7*t(),b.push({tG:[{x:0,y:n(x,M)},{x:Math.max(D-(.075+Math.abs(n(0,.05))),0),y:n(x,M)},{x:D,y:n(.75,M)}],...a,td:Math.round(2*a.td),tm:1.2*a.tm,dm:3*a.dm})),p>.333){const e=null!=D?D+.1+t()*(.9-(D+.1)):1-(.1+.5*t());b.push({tG:[{x:e,y:n(.75,M)},{x:Math.min(e+(.075+Math.abs(n(0,.05))),1),y:n(x,M)},{x:1,y:n(x,M)}],...a,td:Math.round(2*a.td),tm:1.2*a.tm,dm:3*a.dm})}return b},yOffsets:[[{offset:.05,lumProb:.2},.1],[{offset:.1,lumProb:.3},.2],[{offset:.2,lumProb:.5},.4],[{offset:.25,lumProb:.7},.2],[{offset:.35,lumProb:1},.1]]},{name:"Forests",getLayers:(t,e,n)=>{const o=[],a=e([4,5,6]),[s,r]=e({4:[[.3,.2],[.35,.175],[.4,.15]],5:[[.3,.15],[.35,.15],[.4,.12]],6:[[.2,.15],[.3,.1],[.3,.12],[.35,.12],[.4,.1]]}[a]),l={4:{td:14,tm:.07,dd:140,dm:.06},5:{td:17,tm:.06,dd:170,dm:.051},6:{td:20,tm:.05,dd:200,dm:.042}}[a];let i=e([-1,1]);for(let t=0;t<a;t++){const e=s+t*r;o.push({tG:[{x:0,y:Math.min(e+n(0,r/3),.975)},{x:1,y:Math.min(e+n(0,r/3),.975)}],lSD:i,...l}),i*=-1}return o},yOffsets:[[{offset:0,lumProb:.6},.1],[{offset:.1,lumProb:.7},.4],[{offset:.2,lumProb:.8},.2],[{offset:.3,lumProb:.9},.2],[{offset:.4,lumProb:1},.1]]},{name:"Moors",getLayers:(t,e,n,o)=>{const a={td:20,tm:.02,dd:200,dm:.002},s=.05,r=s+.3*t(),l=e([3,4]),i=[n(.4,.05)];for(let t=1;t<l;t++)i.push(i[t-1]+Math.abs(n(.05,.025)));const f=i[i.length-1],u=e([0,1,2]),m=f+(u>0?Math.abs(n(.05,.025)):0);let h,d;2===u?t()<.5?(h=m,d=m+t()*(r-s)):(h=m+t()*(r-s),d=m):1===u&&(t()<.5?h=m:d=m);const c=i.map(((t,e)=>({tG:[{x:0,y:t},{x:1,y:t}],...a,td:a.td+5*e,dm:a.dm+5e-4*e,layerHeight:r+m-t}))),g={...a,td:a.td+5*i.length,dm:a.dm+5e-4*i.length};if(null!=h){const e=()=>o(.2,.7);c.push({tG:[{x:0,y:h},{x:e(),y:m+r}],...g}),t()<.2&&c.push({tG:[{x:0,y:h+t()*(m+(r-s)-h)},{x:e(),y:m+r}],...g})}if(null!=d){const e=()=>1-o(.2,.7);c.push({tG:[{x:e(),y:m+r},{x:1,y:d}],...g}),t()<.2&&c.push({tG:[{x:e(),y:m+r},{x:1,y:d+t()*(m+(r-s)-d)}],...g})}return c},yOffsets:[[{offset:-.1,lumProb:.6},.1],[{offset:0,lumProb:.7},.2],[{offset:.1,lumProb:.8},.4],[{offset:.2,lumProb:.9},.2],[{offset:.3,lumProb:1},.1]]},{name:"Mountains",getLayers:(t,e,n,o)=>{const a={td:20,tm:.02,dd:200,dm:.005},s=(t,e)=>e?t.reverse().map((({x:t,y:e})=>({x:1-t,y:e}))):t,r=t()<.5,l=t()<.5,i=[];return i.push({tG:s([{x:0,y:.1},{x:o(.1,.2),y:o(.025,.075)},{x:o(.3,.5),y:o(.3,.5)}],r),...a,tm:.1}),i.push({tG:s([{x:0,y:.3},{x:.5,y:o(.125,.175)},{x:1,y:.3}],l),...a,tm:.05}),i.push({tG:s([{x:0,y:.35},{x:.5,y:o(.25,.35)},{x:1,y:.55}],l),...a,tm:.033}),i.push({tG:s([{x:0,y:.5},{x:.4,y:o(.55,.65)},{x:.5,y:o(.65,.75)},{x:.65,y:1}],l),...a,tm:.033}),i.push({tG:s([{x:0,y:.7},{x:o(.7,.9),y:1}],l),...a,tm:.075}),i},yOffsets:[[{offset:0,lumProb:.3},.3],[{offset:.1,lumProb:.5},.4],[{offset:.2,lumProb:.6},.2],[{offset:.3,lumProb:.9},.1]],disallowedTechniques:["Sparse","Hazy"]},{name:"Plains",getLayers:(t,e,n,o)=>{const a={td:20,tm:.04,dd:200,dm:.005},s=.1+.1*t();let r,l;for(;r=n(.5,.05),l=n(.5,.05),!(Math.abs(r-l)<s/3););const i=Math.max(r,l)+s;let f=0;const u=[];u.push({tG:[{x:0,y:r},{x:o(.35,.65),y:Math.min(r,l)-o(.1,.2)},{x:1,y:l}],...a,td:a.td+5*f,dm:a.dm+5e-4*f,layerHeight:i-Math.max(r,l)}),f++;const m=r+Math.abs(n(0,.05)),h=l+Math.abs(n(0,.05));u.push({tG:[{x:0,y:m},{x:1,y:h}],...a,td:a.td+5*f,dm:a.dm+5e-4*f,layerHeight:i-Math.max(h,h)}),f++;const d=o(.35,.65),c=r+Math.max(Math.abs(n(0,.05)),s/3);u.push({tG:[{x:0,y:c},{x:d-Math.abs(n(0,.1)),y:c+Math.abs(n(0,.025))},{x:d+(.05+Math.abs(n(0,.1))),y:i}],...a,td:a.td+5*f,dm:a.dm+5e-4*f,layerHeight:i-c});const g=r+Math.max(Math.abs(n(0,.05)),s/3);return u.push({tG:[{x:d-(.05+Math.abs(n(0,.1))),y:i},{x:d+Math.abs(n(0,.1)),y:g+Math.abs(n(0,.025))},{x:1,y:g}],...a,td:a.td+5*f,dm:a.dm+5e-4*f,layerHeight:i-g}),u},yOffsets:[[{offset:-.1,lumProb:.2},.1],[{offset:-.05,lumProb:.3},.2],[{offset:.05,lumProb:.5},.4],[{offset:.2,lumProb:.7},.2],[{offset:.3,lumProb:1},.1]],disallowedTechniques:["Hazy"]},{name:"Peaks",getLayers:(t,e,n,o)=>{const a=.75,s={td:20,tm:.06,dd:300,dm:.01};let r=0;const l=1-.9*o(.75,1),i=o(.4,.6),f=i-.05+Math.abs(n(0,.2)),u=i+.05-Math.abs(n(0,.2)),m=i-(.15+Math.abs(n(0,.2))),h=i+(.15+Math.abs(n(0,.2))),d=[],c=o(.33,.66)*f;let g,y;for(r=0;++r<50&&(g=1-o(.8,1)*(1-l),!((1-g)/((f-c)*p)<=a)););for(r=0;++r<50&&(y=l+o(.5,.75)*(1-l),!((y-g)/(c*p)<=a)););d.push({tG:[{x:0,y},{x:c,y:g},{x:f,y:1}],...s});const b=u+o(.33,.66)*(1-u);let x,M,D;for(r=0;++r<50&&(x=1-o(.8,1)*(1-l),!((1-x)/((b-u)*p)<=a)););for(r=0;++r<50&&(M=l+o(.5,.75)*(1-l),!((M-x)/((1-b)*p)<=a)););for(d.push({tG:[{x:u,y:1},{x:b,y:x},{x:1,y:M}],...s}),r=0;++r<50;){D=1-o(.25,1)*(1-l);const t=(1-D)/((i-m)*p),e=(1-D)/((h-i)*p);if(t<=1&&t>=.66&&e<=1&&e>=.66)break}return d.push({tG:[{x:m,y:1},{x:i,y:D},{x:h,y:1}],...s,td:15,tm:.1}),d},yOffsets:[[{offset:0,lumProb:.7},.5],[{offset:.08,lumProb:.8},.2],[{offset:.16,lumProb:.9},.2],[{offset:.24,lumProb:1},.1]],disallowedTechniques:["Sparse","Hazy"]},{name:"Valleys",getLayers:(t,e,n,o)=>{const a={td:20,tm:.04,dd:200,dm:.015},s=(t,e)=>e?t.reverse().map((({x:t,y:e})=>({x:1-t,y:e}))):t,r=t=>o(t-.05,t+.05),l=t()<.5,i=[];i.push({tG:s([{x:0,y:r(.3)},{x:r(.35),y:r(.4)},{x:1,y:r(.3)}],l),layerHeight:.6,...a});const f=r(.25),u=r(.3);return i.push({tG:s([{x:0,y:r(.45)},{x:f-.05,y:u},{x:f+.05,y:u},{x:r(.5),y:r(.5)}],l),...a,tm:.025,lSD:l?1:-1}),i.push({tG:s([{x:r(.225),y:r(.5)},{x:r(.7),y:r(.15)},{x:1,y:.4}],l),...a,tm:.025,lSD:l?-1:1}),i.push({tG:s([{x:0,y:r(.3)},{x:r(.275),y:r(.6)}],l),...a,tm:.025,dm:.01,lSD:l?1:-1}),i.push({tG:s([{x:r(.4),y:1},{x:1,y:r(.3)}],l),...a,td:12,tm:.05,dm:.01,lSD:l?-1:1}),i},yOffsets:[[{offset:0,lumProb:.5},.3],[{offset:.1,lumProb:.5},.4],[{offset:.2,lumProb:.6},.2],[{offset:.3,lumProb:1},.1]]}],f=[[{name:"Ilissus",c:[12,100,97],bg:[0,0,20],bgA:[.25,.75],fg:[[0,0,20]],l:[0,0,0]},.03],[{name:"Moonlight",c:[0,0,20],bg:[0,0,95],bgA:[.15,.6],fg:[[0,0,95]],l:[0,0,70]},.03],[{name:"Mower",c:[30,74,95],bg:[32,99,68],bgA:[.35,.65],fg:[[32,99,68]],l:[25,88,59]},.03],[{name:"Parapet",c:[24,90,93],bg:[250,24,37],bgA:[.25,.75],fg:[[250,24,37]],l:[250,24,24]},.03],[{name:"Channel",c:[178,37,97],bg:[185,62,40],bgA:[.25,.75],fg:[[185,62,40]],l:[185,62,20]},.03],[{name:"Rose Skirt",c:[240,63,97],bg:[297,100,75],bgA:[.25,.75],fg:[[297,100,75]],l:[297,100,35]},.03],[{name:"Red Roof",c:[0,0,96],bg:[350,40,50],bgA:[.25,.75],fg:[[350,40,50]],l:[350,87,74]},.03],[{name:"Clearing",c:[123,100,98],bg:[138,30,50],bgA:[.25,.75],fg:[[138,30,50]],l:[138,30,30]},.03],[{name:"Models",c:[348,75,97],bg:[348,97,84],bgA:[.25,.75],fg:[[348,97,84]],l:[346,88,72]},.03],[{name:"Seine",c:[0,0,97],bg:[220,30,50],bgA:[.25,.75],fg:[[220,30,50]],l:[215,22,31]},.03],[{name:"Circus",c:[32,99,68],bg:[236,100,65],bgA:[.5,.5],fg:[[236,100,65]]},.015],[{name:"Can-Can",c:[332,90,47],bg:[262,77,30],bgA:[.5,.5],fg:[[262,77,30]]},.015],[{name:"Clown",c:[347,68,46],bg:[34,98,64],bgA:[.5,.5],fg:[[34,98,64]]},.015],[{name:"Fishermen",c:[166,93,36],bg:[221,57,26],bgA:[.5,.5],fg:[[221,57,26]]},.015],[{name:"Stone Breaker",c:[30,50,97],bg:[32,99,68],bgA:[.5,1],fg:[[3,99,68],[348,86,76],[350,40,50]]},.04],[{name:"Pink Landscape",c:[344,100,96],bg:[344,100,90],bgA:[1,1],fg:[[340,100,74],[344,88,51],[346,85,36]]},.04],[{name:"Couple",c:[272,100,97],bg:[271,60,88],bgA:[.75,1],fg:[[217,51,78],[270,24,59],[357,49,64]]},.04],[{name:"Powder",c:[32,60,91],bg:[311,41,78],bgA:[.5,.5],fg:[[326,36,27],[347,44,51],[349,23,58]]},.04],[{name:"Maria",c:[36,100,91],bg:[181,36,70],bgA:[.5,1],fg:[[260,20,38],[38,88,51]]},.04],[{name:"Bathers",c:[5,99,96],bg:[2,93,86],bgA:[.5,1],fg:[[1,89,72],[12,94,73]]},.04],[{name:"Suburbs",c:[16,67,79],bg:[32,100,90],bgA:[.75,1],fg:[[185,48,45],[350,40,50]]},.04],[{name:"Bouquet",c:[47,44,89],bg:[181,36,70],bgA:[.5,1],fg:[[209,100,18],[7,74,70]]},.04],[{name:"Anchorage",c:[138,33,95],bg:[335,11,62],bgA:[.5,.5],fg:[[20,91,67],[212,30,45],[320,29,39]]},.04],[{name:"Wintry",c:[360,18,97],bg:[224,37,76],bgA:[.5,1],fg:[[0,0,17],[33,88,71],[226,12,56]]},.04],[{name:"Riverside",c:[240,2,95],bg:[214,53,83],bgA:[.5,.75],fg:[[58,24,59],[136,21,44],[239,22,60]]},.04],[{name:"Shore",c:[198,32,94],bg:[198,26,76],bgA:[.75,1],fg:[[187,55,71],[198,100,41],[208,97,18]]},.04],[{name:"Sideshow",c:[260,20,36],bg:[260,20,18],bgA:[.5,1],fg:[[38,89,55],[253,43,71],[344,100,88]]},.04],[{name:"Dark Horse",c:[215,17,26],bg:[215,38,16],bgA:[.5,1],fg:[[5,16,46],[37,77,49],[204,21,75]]},.04],[{name:"Forest Path",c:[186,100,8],bg:[186,10,34],bgA:[.5,.75],fg:[[1,100,69],[315,100,59],[282,86,85]]},.04],[{name:"Lighthouse",c:[203,56,8],bg:[236,100,65],bgA:[.5,1],fg:[[172,90,55],[293,55,68]]},.04]],u=[{name:"Hazy",xDis:1.5,yDis:8,xDen:360,yDen:200,eYDis:1,aDRP:1,xDisp:()=>0,bAI:1,probability:.1,lRC:5,bLRC:5},{name:"Flowing",xDis:4,yDis:1,xDen:400,yDen:300,eYDis:0,aDRP:2,xDisp:(t,e,n)=>e?0:n*Math.sin(t/90)*t/450,bAI:0,probability:.2,lRC:4},{name:"Grainy",xDis:4,yDis:1,xDen:400,yDen:300,eYDis:0,aDRP:1,xDisp:(t,n,a)=>n?0:a*o([4,2,1,-1])*Math.sin(50*e()/25)*t/2e3,bAI:0,probability:.4},{name:"Dense",xDis:1,yDis:1,xDen:30,yDen:8e3,eYDis:0,aDRP:2,xDisp:()=>0,bAI:1,probability:.2},{name:"Sparse",xDis:.5,yDis:1,xDen:75,yDen:1e3,eYDis:0,aDRP:1,xDisp:()=>0,bAI:1,lRC:5,probability:.1,disallowedColorTypes:["Point"]}];function m(t,e,n,o,a,s,r){const l=[a-t,s-e],i=[n-t,o-e],f=h(i,i);let u=h(l,i)/f;u=u<0?0:u,u=u>1?1:u;const m=[i[0]*u+t-a,i[1]*u+e-s];return h(m,m)<=r*r}function h(t,e){return t[0]*e[0]+t[1]*e[1]}function d(t,e,n,o,a,s,r,l){const i=n-t,f=o-e,u=r-a,m=l-s,h=(-f*(t-a)+i*(e-s))/(-u*f+i*m),d=(u*(e-s)-m*(t-a))/(-u*f+i*m);return h>=0&&h<=1&&d>=0&&d<=1}function c(t,e,n,o){if("None"===n.type)return!1;if(["Full","Glowing","Radiant","Blazing"].includes(n.type)){const a=Math.sqrt((t-n.center.x*p)**2+(e-n.center.y)**2);if(!o)return!1;if(a<=n.radius)return!0;for(let t=1;t<=n.haloCount;t++){const e=.05-(t-1)*(.05/n.haloCount);if(a>=n.radius*(1+.2*t-e/2)&&a<=n.radius*(1+.2*t+e/2))return!0}return!1}const a=Math.sqrt((t-n.center.x*p)**2+(e-n.center.y)**2),s=n.radius*{Crescent:1.25,Eclipse:1.01}[n.type],r=2*Math.PI*20/360,l=n.center.x*p+(n.isInverted?-1:1)*Math.sqrt(s**2-n.radius**2)*Math.cos(r),i=n.center.y-Math.sqrt(s**2-n.radius**2)*Math.sin(r),f=Math.sqrt((t-l)**2+(e-i)**2);return!!o&&(a<=n.radius&&f>s||a<=n.radius&&a>=.9833333333333333*n.radius)}const g=16/9,y=g,b=1,p=1.8454106280193234,x=.04,M=3946,D=a(f),P=a(f.filter((([t])=>t.name!==D.name))),A=a([["Layer",.5],["Point",.2],["Linear Gradient",.15],["Reflected Gradient",.15]]),G=a(u.filter((t=>!(t.disallowedColorTypes??[]).includes(A))).map((({name:t,probability:e})=>[t,e]))),w=u.find((t=>t.name===G)),k=["Sparse"].includes(w.name)?"Panorama":a([["Panorama",.75],["Diptych",.05],["Left Break",.05],["Right Break",.05],["Triptych",.05],["Wide Triptych",.05]]);D.bg[3]=D.bgA[w.bAI],P.bg[3]=P.bgA[w.bAI];const R=o(i.filter((t=>!(t.disallowedTechniques??[]).includes(w.name))));"Peaks"===R.name&&"Flowing"===w.name&&(w.lRC=7),"Peaks"===R.name&&"Grainy"===w.name&&(w.lRC=5);const B=R.getLayers(e,o,((t,n)=>{var o,a,s,i;if(l)o=r,l=!1;else{do{i=(a=e()-1)*a+(s=e()-1)*s}while(i>=1);o=a*(i=Math.sqrt(-2*Math.log(i)/i)),r=s*i,l=!0}return o*(n||1)+(t||0)}),n),C=.1678,S=a([[0,.8],[.25,.1],[.5,.1]]),I=e()<.5?1:-1,v=a(R.yOffsets),L=function(t,e,n,o,a,s){const r="Hazy"===t?0:1-n.lumProb,l=s([["None",r],["Full",.35*(1-r)],["Crescent",.2*(1-r)],["Eclipse",.1*(1-r)],["Glowing",.1*(1-r)],["Radiant",.2*(1-r)],["Blazing",.05*(1-r)]]);if("None"===l)return{type:l};const i=Math.max(...e.map((t=>t.tG.map((t=>t.y)))).flat()),f={Glowing:3,Radiant:5,Blazing:10}[l]??0;let u,h,c,g=0;t:for(;++g<100;){const t=["Full","Glowing","Radiant","Blazing"].includes(l);c=a(t?[.1,.2,.3]:[.1,.2]),h=t?o()*i:c/1+.3*o()*(1-2*c/1),u=t?o():c/p+o()*(1-2*c/p);for(const o of e)for(let e=0;e<o.tG.length-1;e++){const{x:a,y:s}=o.tG[e],{x:r,y:l}=o.tG[e+1];if(m(a*p,1*(s+n.offset),r*p,1*(l+n.offset),u*p,1*(h-c*(t?.4:0)),c))continue t;if(a<=u&&r>=u&&!d(a*p,1*(s+n.offset),r*p,1*(l+n.offset),u*p,1*h,u*p,2))continue t}break}return 100===g?{type:"None"}:{type:l,radius:c,center:{x:u,y:h},haloCount:f,isInverted:o()<.5}}(w.name,B,v,e,o,a);let H=parseInt(new URLSearchParams(window.location.search).get("size")??0,10)||Math.min(window.innerWidth/g,window.innerHeight);const z=()=>H,q={Panorama:[],Diptych:[.5],"Left Break":[1/3],"Right Break":[2/3],Triptych:[1/3,2/3],"Wide Triptych":[.2,.8]};function O(t,e){if(t<0||t>p||e<0||e>1)return!0}const E=()=>{const t={td:1,tm:0,dd:1,dm:0,layerHeight:.7,isBackground:!0};return[{tG:[{x:0,y:0},{x:1,y:0}],...t},{tG:[{x:0,y:0},{x:1,y:0}],...t,isInverted:!0}]};new p5((t=>{let a,r,l,i,f,u,m,h,d;const g=[];let G,F;function T(){a=!0,r=1,l=!1,i=!0,t.frameRate(60)}function Y(t){const n=e()<.5;if(1===t.fg.length)return null==t.l?[t.fg[0],t.fg[0]]:n?[t.fg[0],t.l]:[t.l,t.fg[0]];let a,s;for(;!a||!s;)a=o(t.fg),s=o(t.fg.filter((t=>t.join(",")!==a.join(","))).filter((t=>(n?t[0]-a[0]:a[0]-t[0])<180)));return[n?a:s,n?s:a]}function N(t,e,n){let[o,a,s,r]=t,[l,i,f,u]=e;Math.abs(o-l)>180&&(o<l?o+=360:l+=360);const m=[(o+n*(l-o))%360,a+n*(i-a),s+n*(f-s)];return null==r&&null==u||m.push((r??1)+n*((u??1)-(r??1))),m}function W(t,e,n){let[o,a,s,r]=t,[l,i,f,u]=e;Math.abs(o-l)>180&&(o<l?o+=360:l+=360);const m=[(o*(2*n-1)**2+l*(1-(2*n-1)**2))%360,a*(2*n-1)**2+i*(1-(2*n-1)**2),s*(2*n-1)**2+f*(1-(2*n-1)**2)];return null==r&&null==u||m.push((r??1)*(2*n-1)**2+(u??1)*(1-(2*n-1)**2)),m}function j(t,e,n){if(e.noStroke(),!n&&!a&&!l)return void e.noLoop();if(n||e.loop(),!n&&l){if(f<0)return void(-30===f?(i=!0,f=0):f--);if(f>u-1)return void(f===u-1+30?(i=!1,f=u-1):f++)}let o,s,d,c;(n||a&&1===r)&&e.background(...D.c);for(let u=0;u<h.length;u++)for(let g=0;g<h[0].length;g++)if(n||a&&h[u][g]===r-1||l&&m[u][g]===f){o=Math.round((x+(y-2*x)*u/(p/C))*t()),d=Math.round((x+(b-2*x)*g/(1/C))*t()),s=Math.round((x+(y-2*x)*(u+1)/(p/C))*t()),c=Math.round((x+(b-2*x)*(g+1)/(1/C))*t());const r=n&&m[u][g]<f||a&&m[u][g]<f||l&&m[u][g]===f&&i;e.fill(...r?P.c:D.c),e.rectMode(e.CORNERS),e.rect(o,d,s,c)}for(const r of g)for(const u of r.columnLayers)for(let h=0;h<u.length;h++)for(let g=0;g<u[h].length&&!("Flowing"===w.name&&g>0&&null!=u[h][0]&&null==u[h][g]);g++){if(null==u[h][g]||u[h][g].isInSun)continue;const{x:M,y:k,colorIndex:R}=u[h][g],B=Math.floor(M/C),S=Math.floor(k/C),I=(x+(1-2*x/y)*y/p*M)*t(),v=(x+(1-2*x/b)*b/1*k)*t();if(!n&&(a||l)&&(I<o||I>s||v<d||v>c))continue;const L=n&&m[B][S]<f||a&&m[B][S]<f||l&&i,H=r.isBackground?1:((u[h].length-g)/u[h].length)**w.aDRP;if(H>.001){let n;if("Layer"===A)n=e.color(...L?r.alternateColor:r.color);else if("Point"===A){const t=L?P:D,e=1===t.fg.length?[t.fg[0],t.l??t.fg[0]]:t.fg;n=r.isBackground?t.bg:e[Math.floor(R*e.length)]}else if("Linear Gradient"===A){const t=L?F:G;n=r.isBackground?e.color(...L?P.bg:D.bg):N(t[0],t[1],M/p)}else if("Reflected Gradient"===A){const t=L?F:G;n=r.isBackground?e.color(...L?P.bg:D.bg):W(t[0],t[1],M/p)}e.fill(e.hue(n),e.saturation(n),e.lightness(n),e.alpha(n)*H),e.ellipse(I,v,.001*t())}}if(function(t,e){e.noStroke(),e.rectMode(e.CORNER),e.fill(...D.c),e.rect(...[0,0,y,x].map((e=>e*t()))),e.rect(...[0,0,x,b].map((e=>e*t()))),e.rect(...[y,b,-y,-x].map((e=>e*t()))),e.rect(...[y,b,-x,-b].map((e=>e*t())));for(const n of q[k]){const o=x/2+n*(y-x)-x/2;e.rect(...[o,0,x,b].map((e=>e*t())))}}(t,e),!n){if(a){if(r===u)return e.noLoop(),a=!1,!0;r++}l&&(f+=i?1:-1)}}t.setup=()=>{!function(){d=[...E(),...B.map((t=>({...t,tG:t.tG.map((({x:t,y:e})=>({x:t,y:e+v.offset})))})))];for(let t=0;t<d.length;t++){const a=d[t],s={template:[],detail:[],columnLayers:[],height:a.layerHeight??0,isBackground:a.isBackground,isInverted:a.isInverted,color:a.isBackground?D.bg:o(D.fg),alternateColor:a.isBackground?P.bg:o(P.fg)},r=p/a.td;s.template=new Array(a.td+1).fill(void 0);for(const{x:t,y:e}of a.tG)s.template[Math.round(t*a.td)]={x:Math.round(t*a.td)/a.td*p,y:e,isGuideline:!0};for(let t=0;t<s.template.length;t++){const e=t*r;if(null==s.template[t]){const o=a.tG.findIndex((e=>e.x>t/a.td))-1,r=a.tG[o];if(null==r)continue;const l=a.tG[o+1];if(null==l)continue;const i=r.y+(l.y-r.y)*(e-r.x*p)/(l.x*p-r.x*p);let f;for(;;){if(a.isBackground){f=i;break}if(f=i+n(-a.tm,a.tm),r.y===l.y)break;if(!(f>=Math.max(r.y,l.y)||f<=Math.min(r.y,l.y)))break}s.template[t]={x:e,y:f}}}if(s.template=s.template.filter(Boolean),"Flowing"===w.name){const t=a.lSD??I;0===s.template[0].x&&1===t&&s.template.unshift({x:-.5*p,y:s.template[0].y}),s.template[s.template.length-1].x>=p&&-1===t&&s.template.push({x:1.5*p,y:s.template[s.template.length-1].y})}let l,i=s.template[0].y;for(let t=1;t<s.template.length;t++){l=s.template[t].y;const e=s.template[t].x,o=Math.round(a.dd/a.td),f=r/o;for(let r=0;r<o;r++){const o=s.template[t-1].x+r*f;s.detail.push({x:o,y:i});const u=f*(l-i)/(e-o);i+=n(u-a.dm,u+a.dm)}}s.detail.push({x:s.template[s.template.length-1].x,y:i});for(let o=0;o<(a.isBackground?w.bLRC??3:w.lRC??3);o++){const o=[],r=Math.min(...s.detail.map((t=>t.y))),l=Math.max(...s.detail.map((t=>t.y))),i=!R.isInverted||s.isBackground?Math.min(l+s.height,1):Math.max(r-s.height,0),f=1/w.xDen,u=Math.round(s.detail[0].x*w.xDen/p),m=Math.round(s.detail[s.detail.length-1].x*w.xDen/p)-u;for(let r=0;r<m;r++){const l=(u+r)*f*p,h=(s.detail.length-1)*r/(m-1)%1,d=Math.floor((s.detail.length-1)*r/(m-1)),g=Math.ceil((s.detail.length-1)*r/(m-1));let y,b;s.isBackground?s.isInverted?(y=1-s.height+n(-.3,.3),b=1):(y=0,b=s.height+n(-.3,.3)):(y=s.detail[d].y+h*(s.detail[g].y-s.detail[d].y),b=R.isInverted?i-(1-i)*e():i+(1-i)*e());const x=!R.isInverted||s.isBackground?Math.round(w.yDen*(b-y))*1.25**t:Math.round(w.yDen*(y-b))*1.25**t,M=!R.isInverted||s.isBackground?1/(x-1)*(b-y):1/(x-1)*(y-b);y+=n(-w.eYDis*M,w.eYDis*M);const D=[];for(let t=0;t<x;t++){const o=!R.isInverted||s.isBackground?y+t*M+M*n(-w.yDis/2,w.yDis/2):y-t*M+M*n(-w.yDis/2,w.yDis/2),r=l+(f/2+f*n(.5*-w.xDis,.5*w.xDis)+w.xDisp(t,s.isBackground,a.lSD??I))*p;D.push(O(r,o)?void 0:{x:r,y:o,isInSun:c(r,o,L,a.isBackground),colorIndex:e()})}o.push(D)}s.columnLayers.push(o)}g.push(s)}}(),G=Y(D),F=s(Y(P)),m=new Array(Math.ceil(p/C)).fill(0).map((t=>new Array(Math.ceil(1/C)).fill(0))),u=m.flat().length;const a=s(new Array(u).fill(0).map(((t,e)=>e)));for(let t=0;t<m.length;t++)for(let e=0;e<m[t].length;e++)m[t][e]=a[t*m[t].length+e];h=new Array(Math.ceil(p/C)).fill(0).map((t=>new Array(Math.ceil(1/C)).fill(0)));const r=s(new Array(u).fill(0).map(((t,e)=>e)));for(let t=0;t<h.length;t++)for(let e=0;e<h[t].length;e++)h[t][e]=r[t*h[t].length+e];T(),f=Math.floor(S*u),t.randomSeed(1e3*e()),t.noiseSeed(1e3*e()),t.noiseDetail(2),t.createCanvas(y*z(),b*z()),t.colorMode(t.HSL),t.angleMode(t.DEGREES),t.frameRate(60)},t.draw=()=>{j(z,t)},t.windowResized=()=>{var e;[/HeadlessChrome/i].some((t=>navigator.userAgent.match(t)))||(T(),e=Math.min(window.innerWidth/y,window.innerHeight),H=e,t.resizeCanvas(y*z(),b*z()))},t.keyPressed=()=>{const e={48:0,49:.25,50:.5,51:.75,52:1}[t.keyCode];if(null!=e&&(T(),f=Math.floor(e*u),console.log(`Setting glitch percentage to ${Math.round(100*e)}%`),t.loop()),83===t.keyCode){if(a)return;l&&(l=!1,t.frameRate(60)),console.log("Downloading print...");const e=t.createGraphics(Math.round(y*M),Math.round(b*M));e.colorMode(t.HSL),e.angleMode(t.DEGREES),e.pixelDensity(1),j((()=>M),e,!0),e.save("pointila-print.png"),console.log("Download of print complete.")}},t.mouseClicked=()=>{a||(l?(l=!1,t.frameRate(60)):(l=!0,t.frameRate(10),t.loop()))}}))})();